name: CI Pipeline for BobApp

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Build and test with Maven
        run: mvn -B verify
        working-directory: ./back

      - name: Upload backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/

  frontend-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./front

      - name: Run tests with coverage
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        working-directory: ./front

      - name: Enforce minimum coverage
        run: |
          FILE_PATH="front/coverage/bobapp/coverage-summary.json"

          echo "--- Debugging Coverage ---"
          echo "Checking for file at: $FILE_PATH"

          if [ ! -f "$FILE_PATH" ]; then
            echo "Error: Coverage summary file not found at $FILE_PATH!"
            exit 1
          fi

          # Use jq to safely parse the JSON and get the total line percentage
          COVERAGE=$(cat $FILE_PATH | jq '.total.lines.pct')

          if [ -z "$COVERAGE" ]; then
            echo "Error: Could not parse line coverage percentage from JSON file using jq."
            exit 1
          fi

          echo "Current coverage is ${COVERAGE}%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Error: Code coverage is below 80%. Please add more tests."
            exit 1
          fi

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/bobapp/

  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11 (for backend analysis)
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Set up Node.js (for frontend analysis)
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./front

      - name: Run frontend tests for SonarCloud
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        working-directory: ./front

      - name: Build backend for SonarCloud
        run: mvn -B compile test-compile
        working-directory: ./back

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push-backend-on-dockerhub:
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-backend:latest

  build-and-push-frontend-on-dockerhub:
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./front
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:latest
